         
********************************************************************
Job Name:r_100,Job ID:678558,Allocate Nodes:172-16-30-41
********************************************************************


--- Logging error ---
Traceback (most recent call last):
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/logging/__init__.py", line 992, in emit
    msg = self.format(record)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/logging/__init__.py", line 838, in format
    return fmt.format(record)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/logging/__init__.py", line 575, in format
    record.message = record.getMessage()
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/logging/__init__.py", line 338, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "main3.py", line 279, in <module>
    train_cnn_model('pnasnet5large', gpu_ids, batch_size)
  File "main3.py", line 239, in train_cnn_model
    logging.debug("Let's use ", len(gpu_ids), " GPUs!")
Message: "Let's use "
Arguments: (8, ' GPUs!')
Traceback (most recent call last):
  File "main3.py", line 279, in <module>
    train_cnn_model('pnasnet5large', gpu_ids, batch_size)
  File "main3.py", line 248, in train_cnn_model
    device, lr=0.0001, save_path=save_path, n_ep=50, num_classes=num_classes)
  File "main3.py", line 144, in do_train
    logits = model(x)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/parallel/data_parallel.py", line 152, in forward
    outputs = self.parallel_apply(replicas, inputs, kwargs)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/parallel/data_parallel.py", line 162, in parallel_apply
    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/parallel/parallel_apply.py", line 83, in parallel_apply
    raise output
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/parallel/parallel_apply.py", line 59, in _worker
    output = module(*input, **kwargs)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/pretrainedmodels/models/pnasnet.py", line 367, in forward
    x = self.features(input)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/pretrainedmodels/models/pnasnet.py", line 348, in features
    x_cell_4 = self.cell_4(x_cell_2, x_cell_3)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/pretrainedmodels/models/pnasnet.py", line 287, in forward
    x_out = self.cell_forward(x_left, x_right)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/pretrainedmodels/models/pnasnet.py", line 165, in cell_forward
    x_comb_iter_3_right = self.comb_iter_3_right(x_right)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/pretrainedmodels/models/pnasnet.py", line 42, in forward
    x = self.zero_pad(x)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/modules/padding.py", line 20, in forward
    return F.pad(input, self.padding, 'constant', self.value)
  File "/home/wangzhaowei/anaconda3/envs/rongyf/lib/python3.6/site-packages/torch/nn/functional.py", line 2799, in pad
    ret = _VF.constant_pad_nd(input, pad, value)
RuntimeError: CUDA out of memory. Tried to allocate 46.00 MiB (GPU 0; 11.90 GiB total capacity; 10.80 GiB already allocated; 42.94 MiB free; 473.47 MiB cached)
